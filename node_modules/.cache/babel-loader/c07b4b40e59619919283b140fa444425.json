{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev88\\\\workspace_react\\\\board2\\\\front\\\\src\\\\components\\\\Sidebar.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport BoardList from './BoardList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Side = styled.div`\n  display: flex;\n  border-right: 1px solid #e0e0e0;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 20%;\n`;\n_c = Side;\nconst Menu = styled.div`\n  margin-top: 30px;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Menu;\n\nclass Sidebar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pays: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/test'); // await fetch('/url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\n\n      const body = await response.json();\n      return body;\n    };\n  }\n\n  // 생명주기   \n\n  /*       \r\n      componentDidAmont() 메서드 : 컴포넌트가 마운트 된 직후 호출되며, 데이터로딩과 같은 작업 등에 재정의\r\n      예 ) List에 특정 item들을 출력하고자 할때 item에 들어갈 Data가 Server에 존재한다면 Server에서 읽어와서\r\n      item 데이터가 state에 존재시 이 state에 데이터를 setting하는 작업\r\n      마운트 즉 React 컴포넌트가 실제 DOM에 삽입된 후 서버로부터 데이터를 읽어와서 setState후 화면에 rerendering\r\n  */\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      pays: res\n    })).catch(err => console.log(err));\n    console.log(\"this.state.board ==>\" + this.state.pays);\n  }\n  /*\r\n      async/await는 Promise를 더욱 쉽게 사용할 수 있도록 해주는 ES8(ES2017) 문법이다.\r\n      이 문법을 사용하기 위해서 함수의 앞부분에 async 키워드를 추가하고,\r\n      해당 함수 내부에서 Promise의 앞부분에 await 키워드를 사용한다.    \r\n    */\n\n\n  render() {\n    const menus = [{\n      name: \"Dashboard\",\n      path: \"./BoardList\"\n    }];\n    return /*#__PURE__*/_jsxDEV(Side, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \" \\uAD00\\uB9AC\\uC790 \\uD398\\uC774\\uC9C0 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        children: menus.map((menu, index) => {\n          return /*#__PURE__*/_jsxDEV(NavLink, {\n            exact: true,\n            style: {\n              color: \"gray\",\n              textDecoration: \"none\"\n            },\n            to: menu.path,\n            activeStyle: {\n              color: \"black\"\n            },\n            children: this.state.pays ? this.state.pays.map((b, index) => {\n              return /*#__PURE__*/_jsxDEV(BoardList, {\n                paykind: b.PAYKIND,\n                price: b.PRICE,\n                fee: b.FEE\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 48\n              }, this);\n            }) : ''\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Sidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Side\");\n$RefreshReg$(_c2, \"Menu\");","map":{"version":3,"sources":["C:/Dev88/workspace_react/board2/front/src/components/Sidebar.js"],"names":["React","Component","NavLink","styled","BoardList","Side","div","Menu","Sidebar","state","pays","callApi","response","fetch","body","json","componentDidMount","then","res","setState","catch","err","console","log","render","menus","name","path","map","menu","index","color","textDecoration","b","PAYKIND","PRICE","FEE"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,I;AASN,MAAME,IAAI,GAAGJ,MAAM,CAACG,GAAI;AACxB;AACA;AACA;AACA;AACA,CALA;MAAMC,I;;AAON,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAG5BQ,KAH4B,GAGpB;AACJC,MAAAA,IAAI,EAAE;AADF,KAHoB;;AAAA,SA2B5BC,OA3B4B,GA2BlB,YAAW;AACjB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA5B,CADiB,CAC2B;;AAC5C,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KA/B2B;AAAA;;AAO5B;;AACA;AACJ;AACA;AACA;AACA;AACA;AACIE,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,OAAL,GACKM,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACT,MAAAA,IAAI,EAAEQ;AAAP,KAAd,CADjB,EAEKE,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGIC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKd,KAAL,CAAWC,IAAhD;AACP;AAED;AACJ;AACA;AACA;AACA;;;AAQIc,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,CACV;AAAEC,MAAAA,IAAI,EAAG,WAAT;AAAsBC,MAAAA,IAAI,EAAE;AAA5B,KADU,CAAd;AAGA,wBACI,QAAC,IAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAA,kBACKF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,8BACI,QAAC,OAAD;AACI,YAAA,KAAK,MADT;AAEI,YAAA,KAAK,EAAI;AAACC,cAAAA,KAAK,EAAE,MAAR;AAAgBC,cAAAA,cAAc,EAAE;AAAhC,aAFb;AAGI,YAAA,EAAE,EAAIH,IAAI,CAACF,IAHf;AAKI,YAAA,WAAW,EAAE;AAACI,cAAAA,KAAK,EAAC;AAAP,aALjB;AAAA,sBAQQ,KAAKtB,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB,CAACK,CAAD,EAAIH,KAAJ,KAAc;AAChD,kCAAO,QAAC,SAAD;AACa,gBAAA,OAAO,EAAEG,CAAC,CAACC,OADxB;AAEa,gBAAA,KAAK,EAAED,CAAC,CAACE,KAFtB;AAGa,gBAAA,GAAG,EAAEF,CAAC,CAACG;AAHpB,iBAAgBN,KAAhB;AAAA;AAAA;AAAA;AAAA,sBAAP;AAIH,aALiB,CAAlB,GAKM;AAbd,aAISA,KAJT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAmBH,SApBA;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AAjE2B;;AAoEhC,eAAetB,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport BoardList from './BoardList';\r\n\r\nconst Side = styled.div`\r\n  display: flex;\r\n  border-right: 1px solid #e0e0e0;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 20%;\r\n`\r\n\r\nconst Menu = styled.div`\r\n  margin-top: 30px;\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nclass Sidebar extends Component {\r\n\r\n    // callApi : fetch를 통해 select -> response -> componentDidMount() res -> setState(board) -> state.board가 수정 -> BoardList에 props 형태로 전달\r\n    state = {\r\n        pays: ''\r\n    }\r\n\r\n    // 생명주기   \r\n    /*       \r\n        componentDidAmont() 메서드 : 컴포넌트가 마운트 된 직후 호출되며, 데이터로딩과 같은 작업 등에 재정의\r\n        예 ) List에 특정 item들을 출력하고자 할때 item에 들어갈 Data가 Server에 존재한다면 Server에서 읽어와서\r\n        item 데이터가 state에 존재시 이 state에 데이터를 setting하는 작업\r\n        마운트 즉 React 컴포넌트가 실제 DOM에 삽입된 후 서버로부터 데이터를 읽어와서 setState후 화면에 rerendering\r\n    */\r\n    componentDidMount() {\r\n        this.callApi()\r\n            .then(res => this.setState({pays: res}))\r\n            .catch(err => console.log(err));\r\n            console.log(\"this.state.board ==>\" + this.state.pays);\r\n    }\r\n\r\n    /*\r\n        async/await는 Promise를 더욱 쉽게 사용할 수 있도록 해주는 ES8(ES2017) 문법이다.\r\n        이 문법을 사용하기 위해서 함수의 앞부분에 async 키워드를 추가하고,\r\n        해당 함수 내부에서 Promise의 앞부분에 await 키워드를 사용한다.    \r\n\r\n    */\r\n    callApi = async() => {\r\n        const response = await fetch('/api/test');  // await fetch('/url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const menus = [\r\n            { name : \"Dashboard\", path: \"./BoardList\"},\r\n        ];\r\n        return(\r\n            <Side>\r\n                <div className=\"logo\"> 관리자 페이지 </div>   \r\n                <Menu>\r\n                    {menus.map((menu, index) => {\r\n                        return (\r\n                            <NavLink\r\n                                exact\r\n                                style = {{color: \"gray\", textDecoration: \"none\"}}\r\n                                to = {menu.path}\r\n                                key={index}\r\n                                activeStyle={{color:\"black\"}}\r\n                            >\r\n                                {\r\n                                    this.state.pays ? this.state.pays.map((b, index) => {\r\n                                        return <BoardList key={index}\r\n                                                            paykind={b.PAYKIND}\r\n                                                            price={b.PRICE}\r\n                                                            fee={b.FEE} />\r\n                                    })  : ''\r\n                                }\r\n\r\n                            </NavLink> \r\n                        );\r\n                    })}\r\n                </Menu> \r\n            </Side>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}